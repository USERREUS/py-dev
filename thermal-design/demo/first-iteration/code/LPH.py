import WSP_tsilindr_turbiny_v1_3
import math


# Тестовая функция кнопки
def lph(args: list):
    # Блок входных параметров
    P_п = args[0]
    t_п = args[1]
    t_н = args[2]
    p_к = args[3]
    t_вх = args[4]
    G_к = args[5]
    etta_п = args[6]

    # Блок принимаемых параметров
    tetta = 2  # °C, недогрев воды в подогревателе до температуры насыщения греющего пара
    k = 2.7  # кВт/м**2*K, коэффициент теплопередачи для подогревателей с U-образными латунными трубами (в диапазоне
    # 2.5-3)
    d_вн = 14.5 * 10 ** (-3)  # мм, внутренний диаметр U-образных латунных труб
    d_нар = 16 * 10 ** (-3)  # мм, внешний диаметр U-образных латунных труб
    S_1 = 22 * 10 ** (-3)  # мм, шахматное расположение труб
    S_2 = 19 * 10 ** (-3)  # мм, шахматное расположение труб
    etta_тр = 0.48  # коэффициент заполнения труб
    w_в = 0.8  # м/с, скорость движения воды в трубах
    v_к = 0.00103  # в определении паралельных труб по ходу воды
    H = 1.5  # м, средняя активная длинна труб для отдельных отсеков
    r = 2265  # в определении числа Рейнольдса
    ro = 961  # плотность пленки конденсата на нижней кромке поверхности (в определении числа Рейнольдса)
    g = 9.81  # ускорение свободного падения
    lyambda = 0.683  # удельная теплота плавления? (в определении коэффициента теплоотдачи конденсирующегося пара
    # к стенкам труб

    # Расчет
    t_вых = t_н - tetta  # °C, температура конденсата на выходе из подогревателя
    h_п = WSP_tsilindr_turbiny_v1_3.H2PT(P_п, t_п + 273.15)  # Дж/кг, энтальпия греющего пара
    h_вх = WSP_tsilindr_turbiny_v1_3.H1PT(p_к, t_вх + 273.15)  # Дж/кг, энтальпия конденсата
    h_вых = WSP_tsilindr_turbiny_v1_3.H1PT(p_к, t_вых + 273.15)  # Дж/кг, энтальпия конденсата на выходе
    h_н = WSP_tsilindr_turbiny_v1_3.HSWT(WSP_tsilindr_turbiny_v1_3.TSP(P_п))  # Дж/кг, энтальпия насыщения пара при данном давлении

    D_п = G_к * (
                (h_вых - h_вх) / ((h_п - h_н) * etta_п))  # кг/с, расход греющего пара на подогреватель #ВЫХОДНЫЕ ДАННЫЕ
    Q = (D_п * (h_п - h_н) * etta_п) * 10 ** (-6)  # МВт, количество теплоты, передаваемое греющим паром в подогревателе
    delta_t_б = t_н - t_вх
    delta_t_м = t_н - t_вых
    delta_t = (delta_t_б - delta_t_м) / (math.log(delta_t_б / delta_t_м))  # температурный напор
    F = (Q * 10 ** 6) / (k * 10 ** 3 * delta_t)  # м^2, требуемая площадь поверхности

    z_1 = math.ceil(
        4 * G_к * v_к / (w_в * math.pi * d_вн ** 2))  # число параллельных труб по ходу воды #ВЫХОДНЫЕ ДАННЫЕ
    z = 4 * z_1  # учет четырехходового движения воды
    F_тр = z * math.pi * d_вн ** 2 / (4 * etta_тр)  # площадь трубной доски, занятая трубами
    l = F / (2 * z_1 * math.pi * d_нар)  # м, Средняя длинна труб

    nu = 0.307 * 10 ** (-6)
    Re = Q * H / (r * ro * nu)  # Число Рейнольдса для пленки конденсата на нижней кромки поверхности

    alpha_1 = 1.01 * lyambda * (g / (nu ** 2)) ** 0.333 * (Re ** (-0.333))  # коэффициент теплоотдачи конденсирующегося
    # пара к стенкам труб
    t = (t_вх + t_вых) / 2
    nu_ж = 0.392 * 10 ** (-6)
    Re_ж = w_в * d_вн / nu_ж  # число Рейнольдса
    Pr = 2.37  # число Прандтля жидкости и стенки
    Nu_ж = 0.021 * Re_ж ** 0.8 * Pr ** 0.43  # число Нусельта для турбулентного режима течения конденсата
    lya_ж = 0.672
    alpha_2 = Nu_ж * lya_ж / d_вн  # средний коэффициент теплоотдачи от стенок труб к конденсату
    delta = 0.75 * 10 ** (-3)
    lyambda = 107
    k = 1 / (1 / alpha_1 + delta / lyambda + 1 / alpha_2)  # ВЫХОДНЫЕ ДАННЫЕ

    print(f'\nВыходные данные программы:\n\nРасход пара на подогреватель: {D_п} кг/с\n'
          f'Число параллеьных труб по ходу воды: {z_1}\n'
          f'Коэффициент теплоотдачи: {k} Вт/(м^2*K)')

    return [D_п, z_1, k]
